user nginx;
worker_processes auto;
pid /var/run/nginx.pid;


events {
	worker_connections 1024;
	# multi_accept on;
}

http {

	##
	# Basic Settings
	##

	proxy_redirect off;
	# proxy_set_header Host $host;
	proxy_set_header Host $host;
	proxy_set_header X–Real–IP $remote_addr;
	proxy_set_header X–Forwarded–For $proxy_add_x_forwarded_for;
	proxy_set_header X-Scheme $scheme;

	proxy_set_header Upgrade $http_upgrade;
	proxy_set_header Connection "upgrade";

	sendfile on;
	tcp_nopush on;
	tcp_nodelay on;
	keepalive_timeout 65;
	types_hash_max_size 2048;
	client_max_body_size 20m;
	server_tokens off;

	include /etc/nginx/mime.types;
	default_type application/octet-stream;

	##
	# Logging Settings
	##

	access_log /var/log/nginx/access.log;
	error_log /var/log/nginx/error.log;

	##
	# Gzip Settings
	##
	gzip on;

	server {
  	listen 443 ssl;

		server_name www.levi.cool; # 域名


		# 开启https,把下面ssl的全部取消注释

		# ssl on;

		ssl_certificate /etc/other/location.crt;   	# https证书(统一前缀/etc/other/) 后面为文件名
		ssl_certificate_key /etc/other/location.key;   # 全部上传到根目录的config文件夹即可(自动配置)

		ssl_session_timeout 5m;
		ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
		ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
		ssl_prefer_server_ciphers on;

		#开启和关闭gzip模式
		gzip on;
		
		#gizp压缩起点，文件大于1k才进行压缩
		gzip_min_length 1k;
		
		# gzip 压缩级别，1-9，数字越大压缩的越好，也越占用CPU时间
		gzip_comp_level 6;
		
		# 进行压缩的文件类型。
		gzip_types text/plain application/javascript application/x-javascript text/css application/xml text/xml text/javascript application/json image/png image/gif image/jpeg video/webm video/mp4 fonts/ttf;
		
		#nginx对于静态文件的处理模块，开启后会寻找以.gz结尾的文件，直接返回，不会占用cpu进行压缩，如果找不到则不进行压缩
		# gzip_static on|off
		
		# 是否在http header中添加Vary: Accept-Encoding，建议开启
		gzip_vary on;

		# 设置压缩所需要的缓冲区大小，以4k为单位，如果文件为7k则申请2*4k的缓冲区 
		gzip_buffers 4 16k;

		# 设置gzip压缩针对的HTTP协议版本
		# gzip_http_version 1.1;



		location / {
			proxy_pass http://web:8000;
    }
		
		location /admin {
			# rewrite ^/(.*) http://admincms:8001/ last;
			proxy_pass http://admincms/;
		}
		
		location /api/web {
			proxy_pass http://server:3000;
		}

		location /api/admin {
			proxy_pass http://server:3001;
		}

    location ~* \.(txt)$ {
			root /etc/other/;
    }

		location ~* \.(html)$ {
			root /etc/other/;
		}
	}
	server {
  	listen 80;

		server_name www.levi.cool levi.cool;   # 域名

		rewrite ^(.*)$ https://$server_name$1 permanent; # 开启https

		#开启和关闭gzip模式
		gzip on;
		
		#gizp压缩起点，文件大于1k才进行压缩
		gzip_min_length 1k;
		
		# gzip 压缩级别，1-9，数字越大压缩的越好，也越占用CPU时间
		gzip_comp_level 6;
		
		# 进行压缩的文件类型。
		gzip_types text/plain application/javascript application/x-javascript text/css application/xml text/xml text/javascript application/json image/png image/gif image/jpeg video/webm video/mp4 fonts/ttf;
		
		#nginx对于静态文件的处理模块，开启后会寻找以.gz结尾的文件，直接返回，不会占用cpu进行压缩，如果找不到则不进行压缩
		# gzip_static on|off
		
		# 是否在http header中添加Vary: Accept-Encoding，建议开启
		gzip_vary on;

		# 设置压缩所需要的缓冲区大小，以4k为单位，如果文件为7k则申请2*4k的缓冲区 
		gzip_buffers 4 16k;

		# 设置gzip压缩针对的HTTP协议版本
		# gzip_http_version 1.1;


		location / {
			proxy_pass http://web:8000;
    	}
		
		location /admin {
			# rewrite ^/(.*) http://admincms:8001/ last;
			proxy_pass http://admincms/;
		}
		
		location /api/web {
			proxy_pass http://server:3000;
		}

		location /api/admin {
			proxy_pass http://server:3001;
		}

    location ~* \.(txt)$ {
			root /etc/other/;
    }

		location ~* \.(html)$ {
			root /etc/other/;
		}
	}
}